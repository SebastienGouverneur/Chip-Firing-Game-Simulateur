package view;

import java.util.Observable;
import java.util.Observer;
import javax.swing.JButton;
import javax.swing.JLabel;
import javax.swing.JList;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTextField;

import model.ModelAsynchrone;
import model.ModelFile;

public class ViewGeneratorGraph extends javax.swing.JFrame implements Observer {
    private ModelFile modelFile;
    private ModelAsynchrone modelAsynchrone;
    
    /**
     * Creates new form ViewGeneratorGraph
     */
    public ViewGeneratorGraph() {
        initComponents();
    }
    
    public ViewGeneratorGraph(final ModelFile modelFile) {
        initComponents();
        this.modelFile = modelFile;
    }
    
    public ViewGeneratorGraph(final ModelAsynchrone modelAsynchrone) {
        initComponents();
        this.modelAsynchrone = modelAsynchrone;
    }

    public JButton getButtonCancel() {
        return buttonCancel;
    }

    public JTextField getInputAmountOfChips() {
        return inputAmountOfChips;
    }

    public JTextField getInputNumberOfVertex() {
        return inputNumberOfVertex;
    }

    public JLabel getLabelAmountOfChips() {
        return labelAmountOfChips;
    }

    public JLabel getLabelNumberOfVertex() {
        return labelNumberOfVertex;
    }

    public JLabel getLabelProp() {
        return labelProp;
    }

    public JScrollPane getListGeneratorPanel() {
        return listGeneratorPanel;
    }

    public JList getListGenerator() {
        return listGenerator;
    }

    public JPanel getPreviewGraph() {
        return previewGraph;
    }

    public JPanel getTemplatePanel() {
        return templatePanel;
    }

    public JButton getValidateGenerator() {
        return validateGenerator;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        templatePanel = new javax.swing.JPanel();
        listGeneratorPanel = new javax.swing.JScrollPane();
        listGenerator = new javax.swing.JList();
        labelAmountOfChips = new javax.swing.JLabel();
        inputAmountOfChips = new javax.swing.JTextField();
        validateGenerator = new javax.swing.JButton();
        labelNumberOfVertex = new javax.swing.JLabel();
        inputNumberOfVertex = new javax.swing.JTextField();
        labelProp = new javax.swing.JLabel();
        buttonCancel = new javax.swing.JButton();
        previewGraph = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        getContentPane().setLayout(new java.awt.GridLayout(1, 0));

        templatePanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Template"));

        listGenerator.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "Grid", "Tore", "Cycle" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        listGenerator.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        listGeneratorPanel.setViewportView(listGenerator);
        listGenerator.getAccessibleContext().setAccessibleName("");

        labelAmountOfChips.setText("Amount of chips");

        inputAmountOfChips.setText("0");
        inputAmountOfChips.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                inputAmountOfChipsActionPerformed(evt);
            }
        });

        validateGenerator.setText("OK");

        labelNumberOfVertex.setText("Number of vertex");

        inputNumberOfVertex.setText("0");
        inputNumberOfVertex.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                inputNumberOfVertexActionPerformed(evt);
            }
        });

        labelProp.setText("Properties");

        buttonCancel.setText("Cancel");

        javax.swing.GroupLayout templatePanelLayout = new javax.swing.GroupLayout(templatePanel);
        templatePanel.setLayout(templatePanelLayout);
        templatePanelLayout.setHorizontalGroup(
            templatePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(templatePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(templatePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(listGeneratorPanel)
                    .addGroup(templatePanelLayout.createSequentialGroup()
                        .addGroup(templatePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(labelProp)
                            .addGroup(templatePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addGroup(templatePanelLayout.createSequentialGroup()
                                    .addComponent(buttonCancel)
                                    .addGap(18, 18, 18)
                                    .addComponent(validateGenerator))
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, templatePanelLayout.createSequentialGroup()
                                    .addGap(12, 12, 12)
                                    .addGroup(templatePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addComponent(labelAmountOfChips, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(labelNumberOfVertex))
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addGroup(templatePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(inputNumberOfVertex, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(inputAmountOfChips, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                        .addGap(0, 67, Short.MAX_VALUE)))
                .addContainerGap())
        );
        templatePanelLayout.setVerticalGroup(
            templatePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, templatePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(listGeneratorPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 187, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(labelProp)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(templatePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelNumberOfVertex)
                    .addComponent(inputNumberOfVertex, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(templatePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelAmountOfChips)
                    .addComponent(inputAmountOfChips, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(24, 24, 24)
                .addGroup(templatePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(validateGenerator)
                    .addComponent(buttonCancel)))
        );

        getContentPane().add(templatePanel);

        previewGraph.setBorder(javax.swing.BorderFactory.createTitledBorder("Preview"));
        previewGraph.setLayout(new java.awt.BorderLayout());
        getContentPane().add(previewGraph);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void inputAmountOfChipsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_inputAmountOfChipsActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_inputAmountOfChipsActionPerformed

    private void inputNumberOfVertexActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_inputNumberOfVertexActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_inputNumberOfVertexActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton buttonCancel;
    private javax.swing.JTextField inputAmountOfChips;
    private javax.swing.JTextField inputNumberOfVertex;
    private javax.swing.JLabel labelAmountOfChips;
    private javax.swing.JLabel labelNumberOfVertex;
    private javax.swing.JLabel labelProp;
    private javax.swing.JList listGenerator;
    private javax.swing.JScrollPane listGeneratorPanel;
    private javax.swing.JPanel previewGraph;
    private javax.swing.JPanel templatePanel;
    private javax.swing.JButton validateGenerator;
    // End of variables declaration//GEN-END:variables

    @Override
    public void update(Observable o, Object o1) {
        
    }
}
